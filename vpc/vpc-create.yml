Mappings:
  VpcConfig:
    VPC:
      CIDR: "192.168.0.0/16"
    Private1:
      CIDR: "192.168.0.0/24"
      AZ: "us-east-1c"
    Public1:
      CIDR: "192.168.5.0/24"
      AZ: "us-east-1c"

Resources:
  MyVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap
        - "VpcConfig"
        - "VPC"
        - "CIDR"
      InstanceTenancy: default
      Tags:
        - Key: "Name"
          Value: "MyVPC"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref "MyVpc"
      AvailabilityZone: !FindInMap
        - "VpcConfig"
        - "Private1"
        - "AZ"
      CidrBlock: !FindInMap
        - "VpcConfig"
        - "Private1"
        - "CIDR"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: "PrivateSubnet1"

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref "MyVpc"
      AvailabilityZone: !FindInMap
        - "VpcConfig"
        - "Public1"
        - "AZ"
      CidrBlock: !FindInMap
        - "VpcConfig"
        - "Public1"
        - "CIDR"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "PublicSubnet1"

  MyVpcIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "MyVpcIgw"

  MyVpcIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVpc
      InternetGatewayId: !Ref MyVpcIgw

  MyVpcPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc

  MyVpcPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyVpcPublicRouteTable
      GatewayId: !Ref MyVpcIgw
      DestinationCidrBlock:  "0.0.0.0/0"

  MyVpcPublicSubnetToTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref MyVpcPublicRouteTable